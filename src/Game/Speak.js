import React from 'react';
import Sound from 'react-sound';
import {NavLink} from 'react-router-dom'

export default class Speak extends React.Component {
    constructor(props) {
        super(props);
        this.state = {
            answers: [
                {name: '–ü–æ–∫–∏–Ω—É–ª–∞ –ß–∞—Ç - –ö–æ–∫–∞', path: 'mp3/1. ü§ñ–ü–æ–∫–∏–Ω—É–ª–∞ –ß–∞—Ç - –ö–æ–∫–∞.mp3', orig: "original/1. –ü–æ–∫–∏–Ω—É–ª–∞ –ß–∞—Ç - –ö–æ–∫–∞.mp3"},
                {name: 'Uno ‚Äî Little Big', path: 'mp3/2. ü§ñUno ‚Äî Little Big.mp3', orig: "original/2. Little_Big_UNO.mp3"},
                {name: '¬´–ü–ª–∞—á—É –Ω–∞ —Ç–µ—Ö–Ω–æ¬ª ‚Äî Cream Soda, ¬´–•–ª–µ–±¬ª', path: 'mp3/3. ü§ñ¬´–ü–ª–∞—á—É –Ω–∞ —Ç–µ—Ö–Ω–æ¬ª ‚Äî Cream Soda, ¬´–•–ª–µ–±¬ª.mp3', orig: "original/3. ¬´–ü–ª–∞—á—É –Ω–∞ —Ç–µ—Ö–Ω–æ¬ª ‚Äî Cream Soda, ¬´–•–ª–µ–±¬ª.mp3"},
                {name: 'Blinding Lights ‚Äî The Weeknd', path: 'mp3/4. ü§ñBlinding Lights ‚Äî The Weeknd.mp3', orig: "original/4. Blinding Lights ‚Äî The Weeknd.mp3"},
                {name: 'SLAVA MARLOW - –°–ù–û–í–ê –Ø –ù–ê–ü–ò–í–ê–Æ–°–¨', path: 'mp3/5. ü§ñSLAVA MARLOW - –°–ù–û–í–ê –Ø –ù–ê–ü–ò–í–ê–Æ–°–¨.mp3', orig: "original/5. SLAVA MARLOW - –°–ù–û–í–ê –Ø –ù–ê–ü–ò–í–ê–Æ–°–¨.mp3"},
                {name: '–¥–æ—Ä–∞ ‚Äî –î–æ—Ä–∞–¥—É—Ä–∞', path: 'mp3/6. ü§ñ–¥–æ—Ä–∞ ‚Äî –î–æ—Ä–∞–¥—É—Ä–∞.mp3', orig: "original/6. –î–æ—Ä–∞–¥—É—Ä–∞ - –î–æ—Ä–∞.mp3"},
                {name: '–≤–µ—Ä–∫–∞ —Å–µ—Ä–¥—é—á–∫–∞ –≤—Å—ë –±—É–¥–µ—Ç —Ö–æ—Ä–æ—à–æ', path: 'mp3/7. ü§ñ–≤–µ—Ä–∫–∞ —Å–µ—Ä–¥—é—á–∫–∞ –≤—Å—ë –±—É–¥–µ—Ç —Ö–æ—Ä–æ—à–æ.mp3', orig: "original/7. –≤–µ—Ä–∫–∞ —Å–µ—Ä–¥—é—á–∫–∞ –≤—Å—ë –±—É–¥–µ—Ç —Ö–æ—Ä–æ—à–æ.mp3"},
                {name: '–Æ—Ä–∏–π –®–∞—Ç—É–Ω–æ–≤ - –ë–µ–ª—ã–µ —Ä–æ–∑—ã', path: 'mp3/8. ü§ñ–Æ—Ä–∏–π –®–∞—Ç—É–Ω–æ–≤ - –ë–µ–ª—ã–µ —Ä–æ–∑—ã.mp3', orig: "original/8. –Æ—Ä–∏–π –®–∞—Ç—É–Ω–æ–≤ - –ë–µ–ª—ã–µ —Ä–æ–∑—ã.mp3"},
            ],
            i: 0,
            playStatus: Sound.status.PAUSED,
            position: 0,
            isEnd: 0,
            isShow: 0
        };

        this.next = this.next.bind(this);
        this.pause = this.pause.bind(this);
        this.show = this.show.bind(this);
    }

    next() {
        if (this.state.i < this.state.answers.length - 1)
            this.setState({
                i: ++this.state.i,
                playStatus: Sound.status.PAUSED,
                isShow: 0
            });
        else
            this.setState({
                isEnd: 1
            });

        this.position = 0;
    }

    pause() {
        if (this.state.playStatus == Sound.status.PLAYING)
            this.setState({
                playStatus: Sound.status.PAUSED,
            });
        else
            this.setState({
                playStatus: Sound.status.PLAYING,
            });
    }

    show() {
        this.setState({
            isShow: 1,
            playStatus: Sound.status.PLAYING,
        });
        this.position = 0;
    }

    render() {
        let i = this.state.i;
        let music = (this.state.isShow == 0 ? this.state.answers[i].path : this.state.answers[i].orig);
        return (
            <div>
                <h1 className="name-game">ü§ñ–≠—Ö, –≠–í–ú–æ–≤–Ω–∞!üé§</h1>
                {this.state.isShow == 1 && this.state.isEnd == 0 && (
                    <div className="questions-text">{this.state.answers[i].name}</div>
                )}
                {this.state.isShow == 0 && (
                    <div className='box'>
                        <div className='wave -one'></div>
                        <div className='wave -two'></div>
                        <div className='wave -three'></div>
                        <div className='title'>FM {i + 1} –í—ã—Ä—ã–ø–∞–µ–≤–∫–∞</div>
                    </div>
                )}
                {this.state.isEnd == 1 && (
                    <div className="questions-text">üéâ–ö–æ–Ω–µ—Ü –∏–≥—Ä—ã!üéâ</div>
                )}

                <div className="btn-group">
                    <button onClick={this.pause} className="btn btn-secondary">Play/Pause</button>
                    <button onClick={this.show} className="btn btn-secondary">–û—Ç–≤–µ—Ç</button>
                    <button onClick={this.next} className="btn btn-secondary">–î–∞–ª—å—à–µ</button>
                </div>
                <Sound
                    url={music}
                    playStatus={this.state.playStatus}
                    playFromPosition={this.position}
                    onLoading={this.handleSongLoading}
                    onPlaying={this.handleSongPlaying}
                    onFinishedPlaying={this.handleSongFinishedPlaying}
                    onPlaying={(position) => {
                        console.log(position.position);
                        this.position = position.position;
                    }}
                />
            </div>
        );
    }

}
