import React from 'react';
import Sound from 'react-sound';
import {NavLink} from 'react-router-dom'

export default class Speak extends React.Component {
    constructor(props) {
        super(props);
        this.state = {
            answers: [
                {name: '–ê–ª–µ–∫—Å–∞–Ω–¥—Ä –†–æ–∑–µ–Ω–±–∞—É–º - –ì–æ–ø-—Å—Ç–æ–ø', path: 'mp3/1.mp3', orig: "original/1.mp3"},
                {name: 'Matrang - –ú–µ–¥—É–∑–∞', path: 'mp3/2.mp3', orig: "original/2.m4r"},
                {name: 'Hey, Guys –≠–ª–¥–∂–µ–π', path: 'mp3/3.mp3', orig: "original/3.mp3"},
                {name: '–ì–∞–∑–º–∞–Ω–æ–≤ –û–ª–µ–≥ ‚Äî ¬´–ï—Å–∞—É–ª¬ª', path: 'mp3/4.mp3', orig: "original/4.mp3"},
                {name: '–õ–µ–Ω–∏–Ω–≥—Ä–∞–¥ - –≠–∫—Å–ø–æ–Ω–∞—Ç', path: 'mp3/5.mp3', orig: "original/5.mp3"},
                {name: 'Oxxxymiron - –ì–æ—Ä–æ–¥ –ø–æ–¥ –ø–æ–¥–æ—à–≤–æ–π', path: 'mp3/6.mp3', orig: "original/6.mp3"},
                {name: 'Pharaoh - –î–∏–∫–æ, –Ω–∞–ø—Ä–∏–º–µ—Ä', path: 'mp3/7.mp3', orig: "original/7.mp3"},
                {name: '–ó–µ–º—Ñ–∏—Ä–∞ ¬´–•–æ—á–µ—à—å?¬ª', path: 'mp3/8.mp3', orig: "original/8.mp3"},
                {name: '–°—Ç—Ä—ã–∫–∞–ª–æ –Ω–∞—à–µ –ª–µ—Ç–æ', path: 'mp3/9.mp3', orig: "original/9.m4r"},
                {name: 'Lil Pump - Gucci Gang', path: 'mp3/10.mp3', orig: "original/10.mp3"},
                {name: '–ö–∞—Å—Ç–∞ - –í–æ–∫—Ä—É–≥ —à—É–º', path: 'mp3/11.mp3', orig: "original/11.mp3"},
                {name: '–°–∫—Ä–∏–ø—Ç–æ–Ω–∏—Ç ‚Äì –°–ª–∏–≤–æ—á–Ω–æ–µ –º–∞—Å–ª–æ', path: 'mp3/12.mp3', orig: "original/12.mp3"},
                {name: '–†—É–∫–∏ –≤ –≤–µ—Ä—Ö - –ê –û–Ω –¢–µ–±—è –¶–µ–ª—É–µ—Ç', path: 'mp3/13.mp3', orig: "original/13.m4r"},
            ],
            i: 0,
            playStatus: Sound.status.PAUSED,
            position: 0,
            isEnd: 0,
            isShow: 0
        };

        this.next = this.next.bind(this);
        this.pause = this.pause.bind(this);
        this.show = this.show.bind(this);
    }

    next() {
        if (this.state.i < this.state.answers.length - 1)
            this.setState({
                i: ++this.state.i,
                playStatus: Sound.status.PAUSED,
                isShow: 0
            });
        else
            this.setState({
                isEnd: 1
            });

        this.position = 0;
    }

    pause() {
        if (this.state.playStatus == Sound.status.PLAYING)
            this.setState({
                playStatus: Sound.status.PAUSED,
            });
        else
            this.setState({
                playStatus: Sound.status.PLAYING,
            });
    }

    show() {
        this.setState({
            isShow: 1,
            playStatus: Sound.status.PLAYING,
        });
        this.position = 0;
    }

    render() {
        let i = this.state.i;
        let music = (this.state.isShow == 0 ? this.state.answers[i].path : this.state.answers[i].orig);
        return (
            <div>
                <h1 className="name-game">ü§ñ–≠—Ö, –≠–í–ú–æ–≤–Ω–∞!üé§</h1>
                {this.state.isShow == 1 && this.state.isEnd == 0 && (
                    <div className="questions-text">{this.state.answers[i].name}</div>
                )}
                {this.state.isShow == 0 && (
                    <div className='box'>
                        <div className='wave -one'></div>
                        <div className='wave -two'></div>
                        <div className='wave -three'></div>
                        <div className='title'>FM {i + 1} –í—ã—Ä—ã–ø–∞–µ–≤–∫–∞</div>
                    </div>
                )}
                {this.state.isEnd == 1 && (
                    <div className="questions-text">üéâ–ö–æ–Ω–µ—Ü –∏–≥—Ä—ã!üéâ</div>
                )}

                <div className="btn-group">
                    <button onClick={this.pause} className="btn btn-secondary">Play/Pause</button>
                    <button onClick={this.show} className="btn btn-secondary">–û—Ç–≤–µ—Ç</button>
                    <button onClick={this.next} className="btn btn-secondary">–î–∞–ª—å—à–µ</button>
                </div>
                <Sound
                    url={music}
                    playStatus={this.state.playStatus}
                    playFromPosition={this.position}
                    onLoading={this.handleSongLoading}
                    onPlaying={this.handleSongPlaying}
                    onFinishedPlaying={this.handleSongFinishedPlaying}
                    onPlaying={(position) => {
                        console.log(position.position);
                        this.position = position.position;
                    }}
                />
            </div>
        );
    }

}