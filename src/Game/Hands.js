import React from 'react';
import {NavLink} from 'react-router-dom'
import Sound from "react-sound";

export default class Hands extends React.Component {
    constructor(props) {
        super(props);
        this.state = {
            word: [
                [
                    "–ü–æ—Ä–∫–∞", "–∞—Ä—Ö–µ–æ–ª–æ–≥", "–ö–∞–º–∞—Å—É—Ç—Ä–∞", "—ç–ª–µ–∫—Ç—Ä–∏–∫", "–ë–î–°–ú", "–ø–∏—Å–∞—Ç–µ–ª—å", "–≥–∏–Ω–µ–∫–æ–ª–æ–≥", "—à–∞—Ö—Ç–µ—Ä", "–ø—Ä–æ–º–æ—É—Ç–µ—Ä", "–¢–≤–µ—Ä–∫–∏–Ω–≥", "–¥–∞–ª—å–Ω–æ–±–æ–π—â–∏–∫", "–ü—Ä–µ–∑–µ—Ä–≤–∞—Ç–∏–≤", "–ø–æ—Ä–Ω–æ", "—Ö—É–¥–æ–∂–Ω–∏–∫", "–∞–∫—Ç–µ—Ä", "–§–ª–∏—Ä—Ç", "–ø—Å–∏—Ö–∏–∞—Ç—Ä", "–ø—Ä–æ–¥–∞–≤–µ—Ü.", "–ø–æ–ª–∏—Ü–µ–π—Å–∫–∏–π", "–±—É—Å—ã", "–∫–æ—Å–º–æ–Ω–∞–≤—Ç", "–°—Ç—é–∞—Ä–¥–µ—Å—Å–∞"
                ],
                [
                    "—Å–∫—É–ª—å–ø—Ç–æ—Ä", "–í–∏–±—Ä–∞—Ç–æ—Ä", "–±—É—Ö–≥–∞–ª—Ç–µ—Ä", "–ø–æ–∂–∞—Ä–Ω—ã–π", "–•–æ–ª–æ—Å—Ç—è–∫", "–≤–µ—Ç–µ—Ä–∏–Ω–∞—Ä",  "—é—Ä–∏—Å—Ç", "—Å—É–¥—å—è", "–õ–∏—Ñ—á–∏–∫", "–∞–∫—É—à–µ—Ä–∫–∞", "—Å–∞–Ω—Ç–µ—Ö–Ω–∏–∫", "–º–µ–Ω–µ–¥–∂–µ—Ä", "–¢—Ä—É—Å—ã", "—Å–µ–∫—Å", "–ì–∏–Ω–µ–∫–æ–ª–æ–≥", "–£—Ä–æ–ª–æ–≥", "–ó–∞—Å–æ—Å", "–∞—Ä—Ö–∏—Ç–µ–∫—Ç–æ—Ä", "–ª–∏—Ñ—Ç–µ—Ä", "—Ä–µ–∂–∏—Å—Å–µ—Ä", "–ø—á–µ–ª–æ–≤–æ–¥", "–ü—Ä–æ—Å—Ç–∏—Ç—É—Ç–∫–∞"
                ],
            ],
            i: 0,
            j: 0,
            isHelper: 0,
            isEnd: 0,
            time: 0,
        };

        this.position = 0;

        this.next = this.next.bind(this);
        this.tick = this.tick.bind(this);
    }

    componentDidMount() {
        this.timer = setInterval(this.tick, 1000);
    }

    componentWillUnmount() {
        clearInterval(this.timer);
    }

    tick() {
        if (this.state.time === 180) {
            this.setState({isEnd: 1});
            clearInterval(this.timer);
        }
        this.setState({time: ++this.state.time});
    }

    next() {
        let i = this.state.i;
        if (this.state.j < this.state.word[i].length - 1)
            this.setState({
                j: ++this.state.j
            });
    }

    render() {
        let i = parseInt(this.props.match.params.id) || 0;
        let j = this.state.j;

        return (
            <div>
                {this.state.isEnd === 1 && (
                    <Sound
                        url="end.mp3"
                        playStatus={Sound.status.PLAYING}
                        playFromPosition={this.position}
                    />
                )}

                <h1 className="name-game">–ß—É‚úã–∏–µ —Ä—É–∫–∏ (+18)</h1>

                {this.state.isEnd === 0 && (
                    <div className="questions-text">{this.state.word[i][j]}</div>
                )}
                {this.state.isEnd === 1 && (
                    <div className="questions-text" onClick={() => {
                        this.setState({i: 1, isEnd: 0, time: 0, j: 0});
                        this.position = 0;
                        this.timer = setInterval(this.tick, 1000);
                    }}>üéâ–í—Ä–µ–º—è –≤—ã—à–ª–æ!üéâ</div>
                )}
                <div className="btn-group">
                    <button onClick={this.next} className="btn btn-secondary">–î–∞–ª—å—à–µ</button>
                </div>
                <div className="time mt-4">{this.state.time}</div>
            </div>
        );
    }

}
