import React from 'react';
import Sound from 'react-sound';

export default class Agree extends React.Component {
    constructor(props) {
        super(props);
        this.state = {
            word: [
                "–ì–µ—Ä–æ–π –Ω–∞—à–µ–≥–æ –≤—Ä–µ–º–µ–Ω–∏",
                "–î–≤–µ–Ω–∞–¥—Ü–∞—Ç—å —Å—Ç—É–ª—å–µ–≤",
                "–ì–∞—Ä—Ä–∏ –ü–æ—Ç—Ç–µ—Ä –∏ —Ñ–∏–ª–æ—Å–æ—Ñ—Å–∫–∏–π –∫–∞–º–µ–Ω—å",
                "–ü–æ—Ä—Ç—Ä–µ—Ç –î–æ—Ä–∏–∞–Ω–∞ –ì—Ä–µ—è",
                "–û—Ç—Ü—ã –∏ –¥–µ—Ç–∏",
                "–ù–∞–¥ –ø—Ä–æ–ø–∞—Å—Ç—å—é –≤–æ —Ä–∂–∏",
                "–ê–ª–∏—Å–∞ –≤ –°—Ç—Ä–∞–Ω–µ —á—É–¥–µ—Å",
                "–ö–∞–ø–∏—Ç–∞–Ω—Å–∫–∞—è –¥–æ—á–∫–∞",
                "–°—Ç–∞—Ä–∏–∫ –∏ –º–æ—Ä–µ",
                "–§–∞—É—Å—Ç",
                "–û –¥–∏–≤–Ω—ã–π –Ω–æ–≤—ã–π –º–∏—Ä",
                "–°–∫–æ—Ç–Ω—ã–π –¥–≤–æ—Ä",
                "–¢–∏—Ö–∏–π –î–æ–Ω",
                "–ù–µ–∑–Ω–∞–π–∫–∞ –Ω–∞ –õ—É–Ω–µ",
                "–ø–æ—Ö–æ—Ä–æ–Ω–∏—Ç–µ –º–µ–Ω—è –∑–∞ –ø–ª–∏–Ω—Ç—É—Å–æ–º",
                "–ü—Ä–∏–∫–ª—é—á–µ–Ω–∏—è –¢–æ–º–∞ –°–æ–π–µ—Ä–∞. –ü—Ä–∏–∫–ª—é—á–µ–Ω–∏—è –ì–µ–∫–ª—å–±–µ—Ä—Ä–∏ –§–∏–Ω–Ω–∞",
            ],
            i: 0,
            isFullText: 0,
            isEnd: 0,
        };

        this.next = this.next.bind(this);
        this.show = this.show.bind(this);
        this.puntoSwitcher = this.puntoSwitcher.bind(this);
    }

    next() {
        if (this.state.i < this.state.word.length - 1)
            this.setState({
                i: ++this.state.i,
                isHelper: 0,
                isFullText: 0
            });
        else
            this.setState({
                isEnd: 1
            });
    }

    show() {
        this.setState({
            isFullText: 1
        });
    }

    puntoSwitcher(str) {
        const rus = ['–π', '—Ü', '—É', '–∫', '–µ', '–Ω', '–≥', '—à', '—â', '–∑', '—Ö', '—ä', '—Ñ', '—ã', '–≤', '–∞', '–ø', '—Ä', '–æ', '–ª', '–¥', '–∂', '—ç', '—ë', '—è', '—á', '—Å', '–º', '–∏', '—Ç', '—å', '–±', '—é', ' '];
        const en = ['q', 'w', 'e', 'r', 't', 'y', 'u', 'i', 'o', 'p', '[', ']', 'a', 's', 'd', 'f', 'g', 'h', 'j', 'k', 'l', ';', '\'', '\\', 'z', 'x', 'c', 'v', 'b', 'n', 'm', ',', '.', ' '];

        let tmp = "";

        for (let i = 0; i < str.length; i++) {
            let index = rus.indexOf(str[i]);
            tmp += en[index];
        }

        return this.state.isFullText == 1 ? str : tmp;
    }

    render() {
        let i = this.state.i;
        let reg = this.state.isHelper == 1 ? new RegExp(/[–∞–µ—ë–∏–æ—É—ã—ç—é—è]/ig) : new RegExp(/[–∞–µ—ë–∏–æ—É—ã—ç—é—è ]/ig);
        if (this.state.isFullText == 1) {
            reg = new RegExp(/[]/ig);
        }
        return (
            <div>
                <h1 className="name-game">Qwerty‚å®Ô∏è</h1>
                {this.state.isEnd == 0 && (
                    <div className="questions-text">{this.puntoSwitcher(this.state.word[i])}</div>
                )}
                {this.state.isEnd == 1 && (
                    <div className="questions-text">üéâ–ö–æ–Ω–µ—Ü –∏–≥—Ä—ã!üéâ</div>
                )}
                <div className="btn-group">
                    <button onClick={this.show} className="btn btn-secondary">–ü–æ–∫–∞–∑–∞—Ç—å —Å–ª–æ–≤–æ</button>
                    <button onClick={this.next} className="btn btn-secondary">–î–∞–ª—å—à–µ</button>
                </div>
            </div>
        );
    }

}
